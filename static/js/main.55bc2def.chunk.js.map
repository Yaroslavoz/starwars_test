{"version":3,"sources":["components/Image.js","components/MovieItem.js","components/MovieTabs.js","components/Pagination.js","components/App.js","utils/api.js","serviceWorker.js","index.js","css/poster.jpg"],"names":["Image","props","src","alt","MovieItem","state","show","start_link","poster","default_link","toggleOverview","notShow","setState","this","movie","removeMovie","updateSorting","className","title","name","class","role","films","map","it","planets","people","characters","residents","pilots","species","vehicles","starships","type","onClick","bind","edited","split","filter","index","join","React","Component","MovieTabs","memo","swapi_info","filtering","sort_by","handleChange","handleClick","value","e","sortingChange","cx","lowercasedFilter","toLowerCase","filteredData","item","Object","keys","indexOf","slice","JSON","stringify","for","id","onChange","Pagination","currentPage","total_pages","prev","next","handlePage","pagesArray","Array","console","log","href","fill","viewBox","fillRule","d","clipRule","elem","App","updateMovies","url","event","target","pageUpdate","getData","fetch","then","res","json","data","results","prevProps","prevState","sortedArr","sort","a","b","key","Math","ceil","length","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"iNAUeA,EARD,SAACC,GAGX,OACG,yBAAKC,IAAKD,EAAMC,IAAKC,IAAKF,EAAME,O,gBC2IxBC,E,4MA3IbC,MAAQ,CACNC,MAAM,EACNC,WAAYC,IACZC,aAAc,qB,EAGfC,eAAiB,WAChB,IAAMC,GAAW,EAAKN,MAAMC,KAC3B,EAAKM,SAAS,CAACN,KAAKK,K,uDAQb,IAAD,EAKHE,KAAKZ,MAHPa,EAFK,EAELA,MACAC,EAHK,EAGLA,YACAC,EAJK,EAILA,cAGF,OACI,yBAAKC,UAAU,0QAIf,yBAAKA,UAAU,mCACV,kBAAC,EAAD,CAAOA,UAAU,SAASf,IAAKW,KAAKR,MAAME,WAAaJ,IAAKW,EAAMI,OAASJ,EAAMK,OAEhF,yBAAKF,UAAU,8BAA8BH,EAAMI,OAASJ,EAAMK,OAE3C,IAApBN,KAAKR,MAAMC,KACV,oCACF,yBAAKc,MAAM,wEAAwEC,KAAK,SAEvFP,EAAMQ,MAAQ,oCACX,uBAAGF,MAAM,aAAT,UACCN,EAAMQ,MAAMC,KAAI,SAACC,GAAD,OACf,uBAAGJ,MAAM,qBAAqBI,OAE9B,KAGHV,EAAMW,QAAU,oCACf,uBAAGL,MAAM,aAAT,YACCN,EAAMW,QAAQF,KAAI,SAACC,GAAD,OACjB,uBAAGJ,MAAM,qBAAqBI,OAE9B,KAGHV,EAAMY,QAAUZ,EAAMa,YAAcb,EAAMc,WAAad,EAAMe,OAC5D,oCACA,uBAAGT,MAAM,aAAT,WACCN,EAAMY,QAAUZ,EAAMa,YAAcb,EAAMc,WAAad,EAAMe,OAAON,KAAI,SAACC,GAAD,OACvE,uBAAGJ,MAAM,qBAAqBI,OAE9B,KAGHV,EAAMgB,QAAU,oCACf,uBAAGV,MAAM,aAAT,YACCN,EAAMgB,QAAQP,KAAI,SAACC,GAAD,OACjB,uBAAGJ,MAAM,qBAAqBI,OAE9B,KAGDV,EAAMiB,UAAYjB,EAAMiB,WAAa,GAAM,oCAC5C,uBAAGX,MAAM,aAAT,aACCN,EAAMiB,SAASR,KAAI,SAACC,GAAD,OAClB,uBAAGJ,MAAM,qBAAqBI,OAE9B,KAGHV,EAAMkB,UAAY,oCACjB,uBAAGZ,MAAM,aAAT,cACCN,EAAMkB,UAAUT,KAAI,SAACC,GAAD,OACnB,uBAAGJ,MAAM,qBAAqBI,OAE9B,MAKN,yBAAKP,UAAU,mDACbH,EAAMW,QACN,4BAAQQ,KAAK,SAAShB,UAAU,2IAA0IiB,QAASlB,EAAcmB,KAAK,KAAK,aAA3M,WACA,KAGArB,EAAMY,QAAUZ,EAAMa,YAAcb,EAAMc,WAAad,EAAMe,OAC7D,4BAAQI,KAAK,SAAShB,UAAU,0IAAyIiB,QAASlB,EAAcmB,KAAK,KAAK,YAA1M,UACA,KAGArB,EAAMgB,QACN,4BAAQG,KAAK,SAAShB,UAAU,mJAAkJiB,QAASlB,EAAcmB,KAAK,KAAK,aAAnN,WACA,KAGArB,EAAMiB,SACN,4BAAQE,KAAK,SAAShB,UAAU,mJAAkJiB,QAASlB,EAAcmB,KAAK,KAAK,cAAnN,YACA,KAGArB,EAAMkB,UACN,4BAAQC,KAAK,SAAShB,UAAU,mJAAkJiB,QAASlB,EAAcmB,KAAK,KAAK,eAAnN,aACA,KAGArB,EAAMQ,MACN,4BAAQW,KAAK,SAAShB,UAAU,2IAA0IiB,QAASlB,EAAcmB,KAAK,KAAK,WAA3M,SACA,OAKA,MAGN,yBAAKlB,UAAU,kBAEX,4BAAQgB,KAAK,SAAShB,UAAU,6KAA6KiB,QAASrB,KAAKH,gBAAiBG,KAAKR,MAAMC,KAAO,OAAS,QAGvQ,4BAAQ2B,KAAK,SAAShB,UAAU,kIAAkIiB,QAASnB,EAAYoB,KAAK,KAAMrB,IAAlM,gBAEF,uBAAGG,UAAU,OAAb,WAA2B,gCAASH,EAAMsB,OAAOC,MAAM,IAAIC,QAAO,SAACd,EAAIe,GAAL,OAAeA,GAAS,KAAGC,KAAK,Y,GApIxFC,IAAMC,W,gBCgGfC,EAlGGF,IAAMG,MAAK,SAAC3C,GAAW,IAC9B4C,EAA+D5C,EAA/D4C,WAAYC,EAAmD7C,EAAnD6C,UAAWC,EAAwC9C,EAAxC8C,QAAS/B,EAA+Bf,EAA/Be,cAAegC,EAAgB/C,EAAhB+C,aAGhDC,EAAc,SAAAC,GAChB,OAAO,SAACC,GACJnC,EAAckC,KAKhBE,EAAgB,SAACF,GACnB,OAAOG,IACP,eACA,SACA,UACA,OACA,OACA,wBACA,eACA,CACA,aAAcN,IAAYG,EAC1B,oBAAqBH,IAAYG,EACjC,gBAAiBH,IAAYG,GAC7B,iBAAkBH,IAAYG,GAC9B,mBAAoBH,IAAYG,GAChC,sBAAuBH,IAAYG,MAKrCI,EAAmBR,EAAUS,cAC7BC,EAAeX,EAAWP,QAAO,SAAAmB,GACrC,OAAwD,IAAjDC,OAAOC,KAAKF,GAAMG,QAAQN,MAI/B,OAEI,oCAEA,wBAAIrC,UAAU,cACV,wBAAIA,UAAU,QACV,yBAAKA,UAAWmC,EAAe,UAAYlB,QAASe,EAAY,WAAhE,UAEJ,wBAAIhC,UAAU,QACV,yBAAKA,UAAWmC,EAAe,YAAalB,QAASe,EAAY,aAAjE,YAEJ,wBAAIhC,UAAU,QACV,yBAAKA,UAAWmC,EAAe,WAAYlB,QAASe,EAAY,YAAhE,WAEJ,wBAAIhC,UAAU,QACV,yBAAKA,UAAWmC,EAAe,YAAalB,QAASe,EAAY,aAAjE,YAEJ,wBAAIhC,UAAU,QACV,yBAAKA,UAAWmC,EAAe,aAAclB,QAASe,EAAY,cAAlE,aAEJ,wBAAIhC,UAAU,QACV,yBAAKA,UAAWmC,EAAe,cAAelB,QAASe,EAAY,eAAnE,eAEHF,EAAQc,MAAM,GAAI,KAAKf,EACvB,wBAAI7B,UAAU,QACf,yBAAKA,UAAWmC,EAAc,GAAD,OAAKN,EAAL,MAAoBZ,QAASe,EAAY,GAAD,OAAIH,EAAJ,OAArE,WACQ,MAGZ,6BACCU,EACS,oCACF,yBAAKvC,UAAU,0BACVuC,EAAajC,KAAI,SAACC,GACdsC,KAAKC,UAAUvC,QAGlB,KAEd,yBAAKJ,MAAM,gCACP,yBAAKA,MAAM,YACP,2BAAOA,MAAM,wEAAwE4C,IAAI,oBACzF,uBAAG5C,MAAM,mBAGb,yBAAKA,MAAM,YAEP,2BAAOA,MAAM,sKAAsK6C,GAAG,mBAAmBhC,KAAK,OAAOiB,MAAOJ,EAAWoB,SAAUlB,OAKxP,yBAAK/B,UAAU,wEAAwEuC,EAAajC,KAAI,SAAAkC,GAAI,OAC5G,uBAAGxC,UAAU,qBAAqB6C,KAAKC,UAAUN,YCrB3CU,EArEI1B,IAAMG,MAAK,SAAC3C,GAAW,IACnCmE,EAAoDnE,EAApDmE,YAAaC,EAAuCpE,EAAvCoE,YAAaC,EAA0BrE,EAA1BqE,KAAMC,EAAoBtE,EAApBsE,KAAMC,EAAcvE,EAAduE,WACvCC,EAAa,IAAIC,MAAML,GAQvB,OADLM,QAAQC,IAAIP,GAGL,yBAAKpD,UAAU,4FACX,yBAAKA,UAAU,yCAEX,uBAAG4D,KAAK,IAAI5D,UAAU,wSAAwSiB,QAASoC,GAAvU,YAGA,uBAAGO,KAAK,IAAI5D,UAAU,6SAA6SiB,QAASqC,GAA5U,SAIJ,yBAAKtD,UAAU,+DACX,6BACI,uBAAGA,UAAU,gCACR,gBACD,0BAAMA,UAAU,eAAemD,GAC9B,OACD,0BAAMnD,UAAU,eAChBoD,EAAeD,EAAY,EACzBA,EAAY,EACZC,GAGA,OACF,0BAAMpD,UAAU,eAAeoD,GAC9B,WAGb,6BACI,0BAAMpD,UAAU,sCAEZ,4BAAQgB,KAAK,SAAShB,UAAU,qTAAqTiB,QAASoC,GAC9V,yBAAKrD,UAAU,UAAU6D,KAAK,eAAeC,QAAQ,aACjD,0BAAMC,SAAS,UAAUC,EAAE,oHAAoHC,SAAS,cAI3JT,EAAWK,KAAK,GAAGvD,KAAI,SAACC,EAAIe,GAAL,OAAoBA,EAAQ,KAAGsB,MAAMO,EAAc,EAAIA,EAAc,GAC5F7C,KAAI,SAAA4D,GACF,OAAQ,4BAAQlD,KAAK,SAAShB,UAAU,+SAA+SiB,SA/CzVgB,EA+C8WiC,EA9CnX,WACJX,EAAWtB,MA8CFiC,GAhDD,IAACjC,KAqDD,4BAAQjB,KAAK,SAAShB,UAAU,4TAA4TiB,QAASqC,GACjW,yBAAKtD,UAAU,UAAU6D,KAAK,eAAeC,QAAQ,aACjD,0BAAMC,SAAS,UAAUC,EAAE,qHAAqHC,SAAS,qBCsEtKE,E,kDAxHb,aAAc,IAAD,8BACX,gBAwBFrE,YAAc,SAAAD,GACZ,IAAMuE,EAAe,EAAKhF,MAAMwC,WAAWP,QAAO,SAACd,GAAD,OAAQA,EAAG8D,MAAQxE,EAAMwE,OAC3E,EAAK1E,SAAS,CACZiC,WAAYwC,KA5BH,EAgCbrE,cAAgB,SAAAkC,GACd,EAAKtC,SAAS,CACZmC,QAASG,KAlCA,EAsCbF,aAAe,SAAAuC,GACb,EAAK3E,SAAS,CAAEkC,UAAWyC,EAAMC,OAAOtC,SAvC7B,EA0CbuC,WAAa,SAAAvC,GACX,EAAKtC,SAAS,CACZwD,YAAalB,KA5CJ,EAiDZwC,QAAU,WACTC,MAAM,GAAD,OC7Dc,0BD6Dd,OAAc,EAAKtF,MAAM0C,UAAW6C,MAAK,SAACC,GAC7C,OAAOA,EAAIC,UACVF,MAAK,SAACG,GACP,EAAKnF,SAAS,CACZiC,WAAYkD,EAAKC,cAtDV,EA2Df1B,KAAO,WACL,EAAKjE,MAAM+D,YAAc,EAAI,EAAKxD,SAAS,CAACwD,YAAa,EAAK/D,MAAM+D,YAAc,IAAM,EAAKxD,SAAS,CAACwD,YAAa,EAAK/D,MAAM+D,eA5DlH,EA+DfG,KAAO,WACL,EAAK3D,SAAS,CACZwD,YAAa,EAAK/D,MAAM+D,YAAc,KA9DtC,EAAK/D,MAAQ,CACXwC,WAAY,GACZC,UAAW,GACXC,QAAS,SACTqB,YAAa,EACbC,YAAa,GARJ,E,+DAcM4B,EAAWC,GAE7B,OAAQA,EAAUnD,UAAYlC,KAAKR,MAAM0C,SAAcmD,EAAU9B,cAAgBvD,KAAKR,MAAM+D,YAAgBvD,KAAK6E,UAAY,K,0CAI3H7E,KAAK6E,Y,+BAiDC,IAAD,OAEAS,EAAmC,WAAvBtF,KAAKR,MAAM0C,QAAsBlC,KAAKR,MAAMwC,WAAWuD,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEnF,MAAQoF,EAAEpF,MAAO,GAAI,KAAGL,KAAKR,MAAMwC,WAAWuD,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAElF,KAAOmF,EAAEnF,KAAM,GAAI,KAE5K,OADAwD,QAAQC,IAAIuB,GAEN,yBAAKlF,UAAU,kCAEb,yBAAKA,UAAU,mDAEb,yBAAKA,UAAU,yFACb,kBAAC,EAAD,CACE8B,QAASlC,KAAKR,MAAM0C,QACpB/B,cAAeH,KAAKG,cACpB8B,UAAWjC,KAAKR,MAAMyC,UACtBE,aAAcnC,KAAKmC,aACnBH,WAAYhC,KAAKR,MAAMwC,eAQ7B,yBAAK5B,UAAU,0GACdkF,EAAU7D,QAAO,SAACd,EAAIe,GAAL,OAAeA,GAAuC,GAA5B,EAAKlC,MAAM+D,YAAc,MAAO7C,KAAI,SAAAT,GAC5E,OACE,kBAAC,EAAD,CACEyF,IAAOzF,EAAMwE,IACbxE,MAASA,EACTC,YAAe,EAAKA,YACpBgC,QAAS,EAAK1C,MAAM0C,QACpB/B,cAAe,EAAKA,oBAM5B,yBAAKC,UAAU,2DACb,kBAAC,EAAD,CACMqD,KAAMzD,KAAKyD,KACXC,KAAM1D,KAAK0D,KACXC,WAAY3D,KAAK4E,WACjBpB,YAAamC,KAAKC,KAAK5F,KAAKR,MAAMwC,WAAW6D,OAAO,GACpDtC,YAAavD,KAAKR,MAAM+D,oB,GAjHzB3B,IAAMC,WEELiE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,MCXNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM1B,MAAK,SAAA2B,GACjCA,EAAaC,iB,kBEnInBC,EAAOC,QAAU,IAA0B,oC","file":"static/js/main.55bc2def.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Image = (props) => {\r\n    //console.log(\"Image props \", props);\r\n    \r\n    return (\r\n       <img src={props.src} alt={props.alt} /> \r\n    )\r\n}\r\n\r\nexport default Image","import React from \"react\";\r\nimport Image from \"./Image\";\r\nimport poster from \"../css/poster.jpg\"\r\n\r\n\r\nclass MovieItem extends React.Component {\r\n  state = {\r\n    show: false,\r\n    start_link: poster,\r\n    default_link: '../css/sparta.gif'\r\n\r\n  };\r\n   toggleOverview = () => {\r\n    const notShow = !this.state.show\r\n     this.setState({show:notShow});\r\n }\r\n// handleClick = value => {\r\n//   return (e) => {\r\n//       this.updateSorting(value);\r\n//   }\r\n// }\r\n\r\n  render() {\r\n    const {\r\n      movie,\r\n      removeMovie,\r\n      updateSorting\r\n    } = this.props;\r\n    // props.data = {};\r\n    return (\r\n        <div className=\"flex flex-wrap h-auto bg-indigo-700  content-between object-contain hover:bg-indigo-800 m-2 sm:mx-auto md:m-2 lg:m-2 xl:m-2 rounded overflow-hidden shadow-2xl transition ease-in-out duration-700 transform hover:-translate-y-2 hover:scale-110 hover:z-100 py-auto \">\r\n            \r\n            \r\n        \r\n        <div className=\"w-full object-contain  py-auto \"> \r\n             <Image className='w-full' src={this.state.start_link } alt={movie.title || movie.name}/>   \r\n                \r\n              <div className=\"font-bold text-xl mb-2 p-2\">{movie.title || movie.name}</div>\r\n              \r\n                {this.state.show === true \r\n                ? <>\r\n                <div class=\"bg-blue-100 border-t border-b border-blue-500 text-blue-700 px-4 py-3\" role=\"alert\">\r\n                  \r\n                {movie.films ? <>\r\n                    <p class=\"font-bold\">Films:</p>\r\n                    {movie.films.map((it) =>\r\n                      <p class=\"text-sm font-mono\">{it}</p>\r\n                    )}</> \r\n                    : null\r\n                  }\r\n\r\n                  {movie.planets ? <>\r\n                    <p class=\"font-bold\">Planets:</p>\r\n                    {movie.planets.map((it) =>\r\n                      <p class=\"text-sm font-mono\">{it}</p>\r\n                    )}</> \r\n                    : null\r\n                  }\r\n\r\n                  {movie.people || movie.characters || movie.residents || movie.pilots  \r\n                  ? <>\r\n                    <p class=\"font-bold\">People:</p>\r\n                    {movie.people || movie.characters || movie.residents || movie.pilots.map((it) =>\r\n                      <p class=\"text-sm font-mono\">{it}</p>\r\n                    )}</> \r\n                    : null\r\n                  } \r\n\r\n                  {movie.species ? <>\r\n                    <p class=\"font-bold\">Species:</p>\r\n                    {movie.species.map((it) =>\r\n                      <p class=\"text-sm font-mono\">{it}</p>\r\n                    )}</> \r\n                    : null\r\n                  }\r\n\r\n                  {  movie.vehicles && movie.vehicles !== []  ? <>\r\n                    <p class=\"font-bold\">Vehicles:</p>\r\n                    {movie.vehicles.map((it) =>\r\n                      <p class=\"text-sm font-mono\">{it}</p>\r\n                    )}</> \r\n                    : null\r\n                  }\r\n\r\n                  {movie.starships ? <>\r\n                    <p class=\"font-bold\">Starships:</p>\r\n                    {movie.starships.map((it) =>\r\n                      <p class=\"text-sm font-mono\">{it}</p>\r\n                    )}</> \r\n                    : null\r\n                  }\r\n\r\n                  \r\n                </div>\r\n                <div className=\"flex flex-wrap items-center justify-around p-4 \">  \r\n                { movie.planets \r\n                ? <button type=\"button\" className='m-1 h-auto bg-teal-500 hover:bg-teal-400 text-white font-bold py-auto px-4 border-b-4 border-teal-700 mt-5 hover:border-teal-500 rounded'onClick={updateSorting.bind(null,'planets/')}>Planets</button> \r\n                : null\r\n                }\r\n\r\n                { movie.people || movie.characters || movie.residents || movie.pilots \r\n                ? <button type=\"button\" className='m-1 h-auto bg-green-500 hover:bg-green-400 text-white font-bold py-auto px-4 border-b-4 border-green-700 hover:border-green-500 rounded'onClick={updateSorting.bind(null,'people/')}>People</button> \r\n                : null\r\n                }\r\n                \r\n                { movie.species \r\n                ? <button type=\"button\" className='m-1 h-auto bg-yellow-500 hover:bg-yellow-400 text-white font-bold py-auto px-4 border-b-4 border-yellow-700 mt-5 hover:border-yellow-500 rounded'onClick={updateSorting.bind(null,'species/')}>Species</button> \r\n                : null\r\n                }\r\n\r\n                { movie.vehicles \r\n                ? <button type=\"button\" className='m-1 h-auto bg-orange-500 hover:bg-orange-400 text-white font-bold py-auto px-4 border-b-4 border-orange-700 mt-5 hover:border-orange-500 rounded'onClick={updateSorting.bind(null,'vehicles/')}>Vehicles</button> \r\n                : null\r\n                }\r\n\r\n                { movie.starships \r\n                ? <button type=\"button\" className='m-1 h-auto bg-purple-500 hover:bg-purple-400 text-white font-bold py-auto px-4 border-b-4 border-purple-700 mt-5 hover:border-purple-500 rounded'onClick={updateSorting.bind(null,'starships/')}>Starships</button> \r\n                : null\r\n                }\r\n\r\n                { movie.films \r\n                ? <button type=\"button\" className='m-1 h-auto bg-pink-500 hover:bg-pink-400 text-white font-bold py-auto px-4 border-b-4 border-pink-700 mt-5 hover:border-pink-500 rounded'onClick={updateSorting.bind(null,'films/')}>Films</button> \r\n                : null\r\n                }\r\n                \r\n                </div>\r\n                </>\r\n                : null}\r\n              \r\n        </div>\r\n            <div className='px-2 py-2 mb-0'>\r\n                               {/* Show info button */}\r\n                <button type=\"button\" className='m-1 mr-2 h-auto bg-blue-500 hover:bg-blue-400 text-white font-bold py-auto px-4 border-b-4 border-blue-700 hover:border-blue-500 rounded outline-none active:.outline-none' onClick={this.toggleOverview}>{this.state.show ? 'hide' : 'show'}</button>\r\n                \r\n                                {/* Delete card button */}\r\n                <button type=\"button\" className='m-1 h-auto bg-red-500 hover:bg-red-400 text-white font-bold py-auto px-4 border-b-4 border-red-700 hover:border-red-500 rounded' onClick={removeMovie.bind(null, movie)}>Delete movie</button>\r\n\r\n              <p className='p-2'>Edited: <strong>{movie.edited.split('').filter((it, index) => index <= 9).join('')}</strong></p>\r\n            </div>\r\n      </div>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieItem;","import React from 'react';\r\nimport cx from 'classnames';\r\n\r\nconst MovieTabs = React.memo((props) => {\r\n    const {swapi_info, filtering, sort_by, updateSorting, handleChange} = props;\r\n    \r\n\r\n    const handleClick = value => {\r\n        return (e) => {\r\n            updateSorting(value);\r\n            \r\n        }\r\n    }\r\n\r\n    const sortingChange = (value) =>{ \r\n        return cx(\r\n        'inline-block',\r\n        'border',\r\n        'rounded',\r\n        'py-1',\r\n        'px-3',\r\n        'hover:border-blue-200',\r\n        'outline-none',\r\n        {\r\n        'text-white': sort_by === value,\r\n        'border-indigo-500': sort_by === value,\r\n        'bg-gray-200': !(sort_by === value),\r\n        'border-white': !(sort_by === value),\r\n        'text-black-500': !(sort_by === value),\r\n        'hover:bg-blue-200': !(sort_by === value),\r\n    })\r\n}\r\n    \r\n\r\nconst lowercasedFilter = filtering.toLowerCase();\r\nconst filteredData = swapi_info.filter(item => {\r\n  return Object.keys(item).indexOf(lowercasedFilter) !== -1\r\n  }\r\n);\r\n\r\n    return (\r\n        \r\n        <>\r\n        \r\n        <ul className=\"flex w-3/4\">\r\n            <li className=\"mr-3\">\r\n                <div className={sortingChange( 'films/' )} onClick={handleClick('films/')} >Films</div>\r\n            </li>\r\n            <li className=\"mr-3\">\r\n                <div className={sortingChange( 'planets/')} onClick={handleClick('planets/')}>Planets</div>\r\n            </li>\r\n            <li className=\"mr-3\">\r\n                <div className={sortingChange( 'people/')} onClick={handleClick('people/')}>People</div>\r\n            </li>\r\n            <li className=\"mr-3\">\r\n                <div className={sortingChange( 'species/')} onClick={handleClick('species/')}>Species</div>\r\n            </li>\r\n            <li className=\"mr-3\">\r\n                <div className={sortingChange( 'vehicles/')} onClick={handleClick('vehicles/')}>Vehicles</div>\r\n            </li>\r\n            <li className=\"mr-3\">\r\n                <div className={sortingChange( 'starships/')} onClick={handleClick('starships/')}>Star Ships</div>\r\n            </li>\r\n            {sort_by.slice(0, -1)===filtering?\r\n            (<li className=\"mr-3\">\r\n            <div className={sortingChange( `${filtering}/`)} onClick={handleClick(`${filtering}/`)}>Follow</div>\r\n            </li>): null\r\n            }\r\n        </ul>\r\n        <div>\r\n        {filteredData \r\n                ? <>\r\n                <div className=\"w-10 overflow-y-scroll\">\r\n                    {filteredData.map((it) => \r\n                        {JSON.stringify(it)}\r\n                    )}\r\n                </div>\r\n                </> : null}\r\n        \r\n        <div class=\"md:flex md:items-center mb-2\">\r\n            <div class=\"md:w-1/3\">\r\n                <label class=\"block text-gray-500 font-bold md:text-right mb-1 md:mb-0 pr-4 text-lg\" for=\"inline-full-name\">\r\n                <i class=\"fa fa-search\"></i>\r\n                </label>\r\n            </div>\r\n            <div class=\"md:w-2/3\">\r\n            \r\n                <input class=\"bg-gray-200 appearance-none border-2 border-gray-200 rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-purple-500\" id=\"inline-full-name\" type=\"text\" value={filtering} onChange={handleChange} />\r\n            </div>\r\n            </div>\r\n        </div>\r\n        \r\n         <div className='flex flex-wrap h-auto  bg-indigo-700  content-between object-contain'>{filteredData.map(item => (\r\n         <p className=\"object-scale-down\">{JSON.stringify(item)}</p>\r\n        ))}</div>     \r\n                \r\n            </>\r\n    )\r\n    \r\n})\r\n\r\nexport default MovieTabs;\r\n\r\n\r\n\r\n// <div className='flex flex-wrap h-auto bg-indigo-700  content-between object-contain'>{filteredData.map(item => (\r\n//         alert(<p>{JSON.stringify(item)}</p>)\r\n//     ))}</div>","import React from 'react'\r\n\r\n\r\nconst Pagination = React.memo((props) => {\r\nconst {currentPage, total_pages, prev, next, handlePage} = props;\r\nconst pagesArray = new Array(total_pages);\r\nconst handleClick = (value) => {\r\n         return () => {\r\n            handlePage(value)\r\n         }\r\n      }\r\n    \r\n console.log(total_pages)\r\n      return (\r\n\r\n        <div className=\"bg-blue-900 px-4 py-3 flex items-center justify-between border-t border-gray-200 sm:px-6\">\r\n            <div className=\"flex-1 flex justify-between sm:hidden\">\r\n            {/* eslint-disable-next-line */}\r\n                <a href=\"#\" className=\"relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm leading-5 font-medium rounded-md text-gray-700 bg-white hover:text-gray-500 focus:outline-none focus:shadow-outline-blue focus:border-blue-300 active:bg-gray-100 active:text-gray-700 transition ease-in-out duration-150\" onClick={prev}>\r\n                Previous\r\n                </a>\r\n                <a href=\"#\" className=\"ml-3 relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm leading-5 font-medium rounded-md text-gray-700 bg-white hover:text-gray-500 focus:outline-none focus:shadow-outline-blue focus:border-blue-300 active:bg-gray-100 active:text-gray-700 transition ease-in-out duration-150\" onClick={next}>\r\n                Next\r\n                </a>\r\n            </div>\r\n            <div className=\"hidden sm:flex-1 sm:flex sm:items-center sm:justify-between\">\r\n                <div>\r\n                    <p className=\"text-sm leading-5 text-white\">\r\n                        {'Showing from '}\r\n                        <span className=\"font-medium\">{currentPage}</span>\r\n                        {' to '}\r\n                        <span className=\"font-medium\">{\r\n                        total_pages > (currentPage+5)\r\n                        ? currentPage+5 \r\n                        : total_pages\r\n                        }</span>\r\n                         \r\n                         {' of '}\r\n                        <span className=\"font-medium\">{total_pages}</span>\r\n                        {' pages'}\r\n                    </p>\r\n                </div>\r\n            <div>\r\n                <span className=\"relative z-0 inline-flex shadow-sm\">\r\n\r\n                    <button type=\"button\" className=\"relative inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 bg-white text-sm leading-5 font-medium text-gray-500 hover:text-gray-400 focus:z-10 focus:outline-none focus:border-blue-300 focus:shadow-outline-blue active:bg-gray-100 active:text-gray-500 transition ease-in-out duration-150\" onClick={prev}>\r\n                    <svg className=\"h-5 w-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                        <path fillRule=\"evenodd\" d=\"M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z\" clipRule=\"evenodd\"/>\r\n                    </svg>\r\n                    </button>\r\n\r\n                    {pagesArray.fill(0).map((it, index) => it = index + 1).slice(currentPage - 1, (currentPage + 5))\r\n                    .map(elem => {\r\n                       return (<button type=\"button\" className=\"-ml-px relative inline-flex items-center px-4 py-2 border border-gray-300 bg-white text-sm leading-5 font-medium text-gray-700 hover:text-gray-500 focus:z-10 focus:outline-none focus:border-blue-300 focus:shadow-outline-blue active:bg-gray-100 active:text-gray-700 transition ease-in-out duration-150\" onClick={handleClick(elem)}>\r\n                    {elem}\r\n                    </button>)\r\n\r\n                    })}\r\n\r\n                    <button type=\"button\" className=\"-ml-px relative inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 bg-white text-sm leading-5 font-medium text-gray-500 hover:text-gray-400 focus:z-10 focus:outline-none focus:border-blue-300 focus:shadow-outline-blue active:bg-gray-100 active:text-gray-500 transition ease-in-out duration-150\" onClick={next}>\r\n                        <svg className=\"h-5 w-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                            <path fillRule=\"evenodd\" d=\"M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z\" clipRule=\"evenodd\"/>\r\n                        </svg>\r\n                    </button>\r\n                </span>\r\n    </div>\r\n  </div>\r\n</div>\r\n      )\r\n\r\n})\r\n\r\nexport default Pagination;","import React from \"react\";\r\nimport MovieItem from \"./MovieItem\"\r\nimport {API_URL} from '../utils/api'\r\nimport MovieTabs from \"./MovieTabs\"\r\nimport Pagination from './Pagination'\r\n\r\n\r\n\r\n\r\n\r\n class App extends React.Component {\r\n  constructor(){\r\n    super();\r\n\r\n    this.state = {\r\n      swapi_info: [],\r\n      filtering: '',\r\n      sort_by: \"films/\",\r\n      currentPage: 1,\r\n      total_pages: 0\r\n    };\r\n  }\r\n\r\n \r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n   \r\n   return (prevState.sort_by !== this.state.sort_by)  || (prevState.currentPage !== this.state.currentPage ) ? this.getData() : ''   \r\n  }\r\n\r\n  componentDidMount (){\r\n     this.getData()\r\n    \r\n\r\n  }\r\n\r\n  removeMovie = movie => {\r\n    const updateMovies = this.state.swapi_info.filter((it) => it.url !== movie.url)\r\n    this.setState({\r\n      swapi_info: updateMovies\r\n    });\r\n  }\r\n  \r\n  updateSorting = value => {\r\n    this.setState({\r\n      sort_by: value\r\n    });\r\n    \r\n  };\r\n  handleChange = event => {\r\n    this.setState({ filtering: event.target.value });\r\n  };\r\n\r\n  pageUpdate = value => {\r\n    this.setState({\r\n      currentPage: value\r\n    });\r\n    \r\n  };\r\n\r\n   getData = () => {\r\n    fetch(`${API_URL}${this.state.sort_by}`).then((res) => {\r\n      return res.json()\r\n    }).then((data) => {\r\n      this.setState({\r\n        swapi_info: data.results\r\n      })\r\n    })\r\n  }\r\n\r\nprev = () => {\r\n  this.state.currentPage > 1 ? this.setState({currentPage: this.state.currentPage - 1}) : this.setState({currentPage: this.state.currentPage})\r\n}\r\n  \r\nnext = () => {\r\n  this.setState({\r\n    currentPage: this.state.currentPage + 1\r\n  })\r\n}\r\n\r\n  render(){\r\n    \r\n    const sortedArr = this.state.sort_by === 'films/'? this.state.swapi_info.sort((a, b) => a.title > b.title? 1: -1):this.state.swapi_info.sort((a, b) => a.name > b.name? 1: -1)\r\n    console.log(sortedArr);\r\n    return (\r\n          <div className='root-bg bg-fixed bg-indigo-200'>\r\n            \r\n            <div className=\"container w-3/4 grid grid-cols-1   h-25 mx-auto\">\r\n            \r\n              <div className=\"w-full flex flex-nowrap  justify-between items-center  p-2 rounded-b bg-blue-900 h-12\">\r\n                <MovieTabs \r\n                  sort_by={this.state.sort_by}\r\n                  updateSorting={this.updateSorting}\r\n                  filtering={this.state.filtering}\r\n                  handleChange={this.handleChange}\r\n                  swapi_info={this.state.swapi_info}\r\n                  \r\n                  />\r\n              </div>\r\n                \r\n            </div>\r\n\r\n\r\n            <div className=\" container w-3/4 mx-auto grid  grid-cols-1 sm:grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-3\">\r\n            {sortedArr.filter((it, index) => index >= ((this.state.currentPage - 1)*6)).map(movie => {\r\n                return (\r\n                  <MovieItem \r\n                    key = {movie.url}\r\n                    movie = {movie}\r\n                    removeMovie = {this.removeMovie}\r\n                    sort_by={this.state.sort_by}\r\n                    updateSorting={this.updateSorting}\r\n                  />  \r\n                )\r\n              })}\r\n              \r\n            </div>\r\n            <div className=\"container w-3/4 grid grid-cols-1 rounded-t h-25 mx-auto\">\r\n              <Pagination \r\n                    prev={this.prev}\r\n                    next={this.next}\r\n                    handlePage={this.pageUpdate}\r\n                    total_pages={Math.ceil(this.state.swapi_info.length/6)}\r\n                    currentPage={this.state.currentPage}\r\n              />\r\n            </div>\r\n        </div>\r\n      );\r\n    }\r\n}\r\n\r\nexport default App;","export const API_URL = \"https://swapi.dev/api/\";\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport './index.scss';\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/poster.13a5abbf.jpg\";"],"sourceRoot":""}